import os
import logging
import random
import datetime
import requests
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
import asyncio

API_TOKEN = os.getenv("API_TOKEN")
APPSCRIPT_URL = os.getenv("APPSCRIPT_URL")  # URL –≤–µ–±-–¥–æ–¥–∞—Ç–∫—É –∑ Apps Script

if not API_TOKEN or not APPSCRIPT_URL:
    raise ValueError("‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ API_TOKEN –∞–±–æ APPSCRIPT_URL")

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# –°—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –ø–∞–º'—è—Ç—ñ
user_state = {}

# –ö–Ω–æ–ø–∫–∏
cancel_kb = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text="‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏")]], resize_keyboard=True)

device_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üì± –¢–µ–ª–µ—Ñ–æ–Ω"), KeyboardButton(text="üíª –ù–æ—É—Ç–±—É–∫")],
        [KeyboardButton(text="üîß –Ü–Ω—à–µ")]
    ],
    resize_keyboard=True
)

executors = ["–ú–∞–π—Å—Ç–µ—Ä –î–º–∏—Ç—Ä–æ", "–ú–∞–π—Å—Ç–µ—Ä –ê–Ω–¥—Ä—ñ–π", "–ú–∞–π—Å—Ç–µ—Ä –ú–∞–∫—Å–∏–º"]
parts = ["–ê–∫—É–º—É–ª—è—Ç–æ—Ä IP11", "–ê–∫—É–º—É–ª—è—Ç–æ—Ä A50", "–ï–∫—Ä–∞–Ω iPhone 12", "–†–æ–∑'—î–º –∑–∞—Ä—è–¥–∫–∏", "–ö–∞–º–µ—Ä–∞ iPhone"]

def make_random_fields():
    executor = random.choice(executors)
    part = random.choice(parts)
    price = random.randint(500, 3000)
    start_date = datetime.date.today().strftime("%d.%m.%Y")
    end_date = "-"  # –ø–æ–∫–∏ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ
    return executor, part, price, start_date, end_date

@dp.message(Command("start"))
async def start(message: types.Message):
    user_state[message.from_user.id] = {"step": "name"}
    await message.answer("üëã –í—ñ—Ç–∞—î–º–æ —É —Å–µ—Ä–≤—ñ—Å–Ω–æ–º—É —Ü–µ–Ω—Ç—Ä—ñ!\n–í–≤–µ–¥—ñ—Ç—å —Å–≤–æ—î —ñ–º‚Äô—è:", reply_markup=cancel_kb)

@dp.message(F.text == "‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏")
async def cancel(message: types.Message):
    user_state.pop(message.from_user.id, None)
    await message.answer("–°–∫–∞—Å–æ–≤–∞–Ω–æ.", reply_markup=ReplyKeyboardRemove())

@dp.message()
async def collect(message: types.Message):
    uid = message.from_user.id
    if uid not in user_state:
        await message.answer("–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å /start —â–æ–± –ø–æ—á–∞—Ç–∏.")
        return

    step = user_state[uid]["step"]

    if step == "name":
        user_state[uid]["name"] = message.text
        user_state[uid]["step"] = "phone"
        await message.answer("üìû –í–≤–µ–¥—ñ—Ç—å —Å–≤—ñ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É:")
    elif step == "phone":
        user_state[uid]["phone"] = message.text
        user_state[uid]["step"] = "device"
        await message.answer("üîß –í–∏–±–µ—Ä—ñ—Ç—å –ø—Ä–∏—Å—Ç—Ä—ñ–π:", reply_markup=device_kb)
    elif step == "device":
        user_state[uid]["device"] = message.text
        user_state[uid]["step"] = "problem"
        await message.answer("–û–ø–∏—à—ñ—Ç—å –ø—Ä–æ–±–ª–µ–º—É:", reply_markup=cancel_kb)
    elif step == "problem":
        user_state[uid]["problem"] = message.text

        # –≥–µ–Ω–µ—Ä—É—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
        executor, part, price, start_date, end_date = make_random_fields()

        # –Ω–∞–¥—Å–∏–ª–∞—î–º–æ —É Google Sheets
        try:
            requests.post(APPSCRIPT_URL, json={
                "user_id": uid,
                "name": user_state[uid]["name"],
                "phone": user_state[uid]["phone"],
                "device": user_state[uid]["device"],
                "problem": user_state[uid]["problem"],
                "executor": executor,
                "part": part,
                "price": price,
                "start_date": start_date,
                "end_date": end_date
            })
            await message.answer(
                f"‚úÖ –î—è–∫—É—î–º–æ! –ó–∞—è–≤–∫—É –ø—Ä–∏–π–Ω—è—Ç–æ.\n"
                f"–í–∞—à –º–∞–π—Å—Ç–µ—Ä: {executor}\n"
                f"–ó–∞–ø—á–∞—Å—Ç–∏–Ω–∞: {part}\n"
                f"–¶—ñ–Ω–∞: {price} –≥—Ä–Ω",
                reply_markup=ReplyKeyboardRemove()
            )
        except Exception as e:
            logging.error(f"–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –≤ Google: {e}")
            await message.answer("‚ö† –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø–∏—Å–∞—Ç–∏ –∑–∞—è–≤–∫—É. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")
        user_state.pop(uid, None)

# –ó–∞–ø—É—Å–∫
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
