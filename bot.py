import os
import requests
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command

API_TOKEN = os.getenv("API_TOKEN")
GSHEETS_WEBHOOK = os.getenv("GSHEETS_WEBHOOK")  # URL –≤–µ–±—Ö—É–∫–∞ –∑ Apps Script

bot = Bot(token=API_TOKEN)
dp = Dispatcher()
orders = {}

# üöÄ /start
@dp.message(Command("start"))
async def start(message: types.Message):
    user_id = message.from_user.id
    if user_id not in orders:
        await message.answer("üëã –í—ñ—Ç–∞—î–º–æ! –ù–∞–ø–∏—à—ñ—Ç—å —Å–≤–æ—î —ñ–º‚Äô—è.")
    else:
        await message.answer("‚úÖ –£ –≤–∞—Å –≤–∂–µ —î –∑–∞—è–≤–∫–∞.")


# üìù –û—Ç—Ä–∏–º—É—î–º–æ —ñ–º‚Äô—è
@dp.message(lambda m: m.from_user.id not in orders)
async def get_name(message: types.Message):
    user_id = message.from_user.id
    orders[user_id] = {"name": message.text, "device": None, "status": "–ù–æ–≤–∞"}
    await message.answer("üì± –Ø–∫–∏–π –ø—Ä–∏—Å—Ç—Ä—ñ–π –ø–æ—Ç—Ä–µ–±—É—î —Ä–µ–º–æ–Ω—Ç—É?")


# üîß –û—Ç—Ä–∏–º—É—î–º–æ –ø—Ä–∏—Å—Ç—Ä—ñ–π —Ç–∞ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ —É Google Sheets
@dp.message(lambda m: orders.get(m.from_user.id) and not orders[m.from_user.id]["device"])
async def get_device(message: types.Message):
    user_id = message.from_user.id
    orders[user_id]["device"] = message.text

    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤ Google Sheets —á–µ—Ä–µ–∑ Apps Script Webhook
    data = {
        "user_id": user_id,
        "name": orders[user_id]["name"],
        "device": orders[user_id]["device"]
    }
    try:
        requests.post(GSHEETS_WEBHOOK, json=data)
    except Exception as e:
        print("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –≤ Google Sheets:", e)

    await message.answer(
        f"‚úÖ –ó–∞—è–≤–∫—É –ø—Ä–∏–π–Ω—è—Ç–æ!\n"
        f"–ù–æ–º–µ—Ä: #{user_id}\n"
        f"–ö–ª—ñ—î–Ω—Ç: {orders[user_id]['name']}\n"
        f"–ü—Ä–∏—Å—Ç—Ä—ñ–π: {orders[user_id]['device']}\n\n"
        "–û—á—ñ–∫—É–π—Ç–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É."
    )


# üìå Endpoint –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –∑ Google Sheets
from fastapi import FastAPI, Request
import uvicorn

app = FastAPI()

@app.post("/send_status")
async def send_status(request: Request):
    data = await request.json()
    user_id = int(data["user_id"])
    status = data["status"]
    await bot.send_message(user_id, f"üîî –í–∞—à —Å—Ç–∞—Ç—É—Å –æ–Ω–æ–≤–ª–µ–Ω–æ: {status}")
    return {"ok": True}


# üöÄ –ó–∞–ø—É—Å–∫
import asyncio

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    loop = asyncio.get_event_loop()
    loop.create_task(main())
    uvicorn.run(app, host="0.0.0.0", port=8000)
